/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\r\n\r\nconst isMobile = {\r\n   Android: function () {\r\n      return navigator.userAgent.match(/Android/i);\r\n   },\r\n   BlackBerry: function () {\r\n      return navigator.userAgent.match(/BlackBerry/i);\r\n   },\r\n   iOS: function () {\r\n      return navigator.userAgent.match(/iPhone|iPad|iPod/i);\r\n   },\r\n   Opera: function () {\r\n      return navigator.userAgent.match(/Opera Mini/i);\r\n   },\r\n   Windows: function () {\r\n      return navigator.userAgent.match(/IEMobile/i);\r\n   },\r\n   any: function () {\r\n      return (\r\n         isMobile.Android() ||\r\n         isMobile.BlackBerry() ||\r\n         isMobile.iOS() ||\r\n         isMobile.Opera() ||\r\n         isMobile.Windows());\r\n   }\r\n };\r\n\r\nif (isMobile.any()) {\r\n   document.body.classList.add('_touch');\r\n \r\n   let menuArrows = document.querySelectorAll('.menu__arrow');\r\n   if (menuArrows.length > 0) {\r\n      for (let index = 0; index < menuArrows.length; index++) {\r\n         const menuArrow = menuArrows[index];\r\n         menuArrow.addEventListener(\"click\", function(e){\r\n            menuArrow.parentElement.classList.toggle('_active');\r\n         });\r\n      }\r\n   }\r\n }  else {\r\n   document.body.classList.add('_pc');\r\n }\r\n \r\n //Меню Бургер\r\nconst iconMenu = document.querySelector('.header__icon');\r\nconst menuBody = document.querySelector('.header__body');\r\n if (iconMenu) {\r\n  iconMenu.addEventListener(\"click\", function(e){\r\n  document.body.classList.toggle('_lock');\r\n  iconMenu.classList.toggle('_active');\r\n   menuBody.classList.toggle('_active');\r\n  });\r\n}\r\n\r\n//Прокрутка при клике \r\nconst menuLinks = document.querySelectorAll('.menu__link[data-goto]');\r\nif (menuLinks.length > 0) {\r\n  menuLinks.forEach(menuLink => {\r\n     menuLink.addEventListener(\"click\", onMenuLinkClick);\r\n  });\r\n\r\n  function onMenuLinkClick(e) {\r\n     const menuLink = e.target;\r\n     if (menuLink.dataset.goto && document.querySelector(menuLink.dataset.goto)) {\r\n        const gotoBlock = document.querySelector(menuLink.dataset.goto);\r\n        const gotoBlockValue = gotoBlock.getBoundingClientRect().top + scrollY -document.querySelector('header').offsetHeight;\r\n\r\n        if (iconMenu.classList.contains('_active')){\r\n           document.body.classList.remove('_lock');\r\n           iconMenu.classList.remove('_active');\r\n           menuBody.classList.remove('_active');\r\n        }\r\n        window.scrollTo({\r\n           top: gotoBlockValue,\r\n           behavior: \"smooth\"\r\n        });\r\n        e.preventDefault();\r\n     } \r\n  }\r\n} \r\n//Spollers\r\nconst spollersArray = document.querySelectorAll('[data-spollers]');\r\nif (spollersArray.length > 0) {\r\n   //получение обічніх спойлеров\r\n   const spollersRegular = Array.from(spollersArray).filter(function (item, index, self) {\r\n      return !item.dataset.spollers.split(\",\")[0];\r\n   });\r\n   //инициализаия обічніх спойлеров\r\n   if (spollersRegular.length > 0) {\r\n      initSpollers(spollersRegular);\r\n   }\r\n\r\n   // получение слайдеров с медиа запросами\r\n   const spollersMedia = Array.from(spollersArray).filter(function (item, index, self) {\r\n      return item.dataset.spollers.split(\",\")[0];\r\n   });\r\n   // инициализация Спойлеров с медиа запросами\r\n   if (spollersMedia.length > 0) {\r\n      const breakpointsArray = [];\r\n      spollersMedia.forEach(item => {\r\n         const params = item.dataset.spollers;\r\n         const breakpoint = {};\r\n         const paramsArray = params.split(\",\");\r\n         breakpoint.value = paramsArray[0];\r\n         breakpoint.type = paramsArray[1] ? paramsArray[1].trim() : \"max\";\r\n         breakpoint.item = item;\r\n         breakpointsArray.push(breakpoint);\r\n      });\r\n      //получаем уникальніе брейкпоинті\r\n      let mediaQueries = breakpointsArray.map(function (item) {\r\n         return `(` + item.type + \"-width: \" + item.value + \"px),\" + item.value + `,` + item.type;\r\n      });\r\n      mediaQueries = mediaQueries.filter(function (item, index, self) {\r\n         return self.indexOf(item) === index;\r\n      });\r\n\r\n      //Работаем с каждім брейкпоитном \r\n      mediaQueries.forEach(breakpoint => {\r\n         const paramsArray = breakpoint.split(\",\");\r\n         const mediaBreakpoint = paramsArray[1];\r\n         const mediaType = paramsArray[2];\r\n         const matchMedia = window.matchMedia(paramsArray[0]);\r\n \r\n         //об'єкти з нужними условиями\r\n         const spollersArray = breakpointsArray.filter(function (item) {\r\n            if (item.value === mediaBreakpoint && item.type === mediaType){\r\n               return true;\r\n            }\r\n         });\r\n\r\n         //Собітие\r\n         matchMedia.addListener(function () {// addListener\r\n            initSpollers(spollersArray, matchMedia); \r\n         });\r\n         initSpollers(spollersArray, matchMedia);\r\n      });\r\n   }  \r\n}\r\n\r\n//ініціалізація\r\nfunction initSpollers(spollersArray, matchMedia = false) {\r\n   spollersArray.forEach(spollersBlock => {\r\n      spollersBlock = matchMedia ? spollersBlock.item : spollersBlock;\r\n      if (matchMedia.matches || !matchMedia) {\r\n         spollersBlock.classList.add('_init');\r\n         initSpollerBody(spollersBlock);\r\n         spollersBlock.addEventListener(\"click\", setSpollerAction);\r\n      } else {\r\n         spollersBlock.classList.remove('_init');\r\n         initSpollerBody(spollersBlock, false);\r\n         spollersBlock.removeEventListener(\"click\", setSpollerAction);\r\n      }\r\n   });\r\n\r\n   //Работа з контентом\r\n\r\n   function initSpollerBody(spollersBlock, hideSpollerBody = true) {\r\n      const spollerTitles = spollersBlock.querySelectorAll('[data-spoller]');\r\n      if (spollerTitles.length > 0) {\r\n         spollerTitles.forEach(spollerTitle => {\r\n            if (hideSpollerBody) {\r\n               spollerTitle.removeAttribute('tabindex');\r\n               if (!spollerTitle.classList.contains('_active')) {\r\n                  spollerTitle.nextElementSibling.hidden = true;\r\n               }\r\n            } else {\r\n               spollerTitle.setAttribute('tabindex', '-1');\r\n               spollerTitle.nextElementSibling.hidden = false;\r\n            }\r\n         });\r\n      }\r\n   }\r\n\r\n   function setSpollerAction(e) {\r\n      const el = e.target;\r\n      if (el.hasAttribute('data-spoller') || el.closest('[data-spoller]')) {\r\n         const spollerTitle = el.hasAttribute('data-spollers') ? el : el.closest('[data-spoller]');\r\n         const spollersBlock = spollerTitle.closest('[data-spollers]');\r\n         const oneSpoller = spollersBlock.hasAttribute('data-one-spoller') ? true :false;\r\n         if (!spollersBlock.querySelectorAll('_slide').length) {\r\n            if (oneSpoller && !spollerTitle.classList.contains('_active')) {\r\n               hideSpollerBody(spollersBlock);\r\n            }\r\n            spollerTitle.classList.toggle('_active');\r\n            _slideToggle(spollerTitle.nextElementSibling, 500);\r\n         }\r\n         e.preventDefault();\r\n      }\r\n   }\r\n\r\n   function hideSpollerBody(spollersBlock) {\r\n      const spollerActiveTitle = spollersBlock.querySelector('[data-spoller]._active');\r\n      if (spollerActiveTitle) {\r\n         spollerActiveTitle.classList.remove('_active');\r\n         _slideUp(spollerActiveTitle.nextElementSibling, 500);\r\n      }\r\n   }\r\n}\r\n\r\n//slideToggle\r\nlet _slideUp = (target, duration = 500) => {\r\n   if (!target.classList.contains('_slide')) {\r\n      target.classList.add('_slide');\r\n      target.style.transitionProperty = 'height, margin, padding';\r\n      target.style.transitionDuration = duration + 'ms';\r\n      target.style.height = target.offsetHeight + 'px';\r\n      target.offsetHeight;\r\n      target.style.overflow = 'hidden';\r\n      target.style.height = 0;\r\n      target.style.paddingTop = 0;\r\n      target.style.paddingBottom = 0;\r\n      target.style.marginTop = 0;\r\n      target.style.marginBottom = 0;\r\n      window.setTimeout(() => {\r\n         target.hidden = true;\r\n         target.style.removeProperty('height');\r\n         target.style.removeProperty('padding-top');\r\n         target.style.removeProperty('padding-bottom');\r\n         target.style.removeProperty('margin-top');\r\n         target.style.removeProperty('margin-bottom');\r\n         target.style.removeProperty('overflow');\r\n         target.style.removeProperty('transition-duration');\r\n         target.style.removeProperty('transition-property');\r\n         target.classList.remove('_slide');\r\n      }, duration);\r\n   }\r\n};\r\nlet _slideDown = (target, duration = 500) => {\r\n   if (!target.classList.contains('_slide')) {\r\n      target.classList.add('_slide');\r\n      if (target.hidden) {\r\n         target.hidden = false;\r\n      }\r\n      let height = target.offsetHeight;\r\n      target.style.overflow = 'hidden';\r\n      target.style.height = 0;\r\n      target.style.paddingTop = 0;\r\n      target.style.paddingBottom = 0;\r\n      target.style.marginTop = 0;\r\n      target.style.marginBottom = 0;\r\n      target.offsetHeight;\r\n      target.style.transitionProperty = \"height, margin, padding\";\r\n      target.style.transitionProperty = duration + 'ms';\r\n      target.style.height = height + 'px';\r\n      target.style.removeProperty('padding-top');\r\n      target.style.removeProperty('padding-bottom');\r\n      target.style.removeProperty('margin-top');\r\n      target.style.removeProperty('margin-bottom');\r\n      window.setTimeout(() => {\r\n         target.style.removeProperty('height');\r\n         target.style.removeProperty('overflow');\r\n         target.style.removeProperty('transition-duration');\r\n         target.style.removeProperty('transition-property');\r\n         target.classList.remove('_slide');\r\n      }, duration);\r\n}\r\n};\r\nlet _slideToggle = (target, duration = 500) => {\r\n   if (target.hidden) {\r\n      return _slideDown(target, duration);\r\n   } else {\r\n      return _slideUp(target, duration);\r\n   }\r\n};\n\n//# sourceURL=webpack://travel_progect/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;